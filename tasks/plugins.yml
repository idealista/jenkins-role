---
- name: Jenkins | Get the jenkins-cli jarfile from the Jenkins server
  get_url:
    url: "{{ jenkins_url }}/jnlpJars/jenkins-cli.jar"
    dest: "{{ jenkins_cli_jar_location }}"
    owner: "{{ jenkins_user }}"
    group: "{{ jenkins_group }}"
  register: jarfile_get
  until: "'OK' in jarfile_get.msg or 'file already exists' in jarfile_get.msg"
  retries: 5
  delay: 10
  check_mode: no

- name: Jenkins | Install Jenkins Plugins
  jenkins_plugin:
    name: "{{ item }}"
    state: present
    params:
      url: "{{ jenkins_url }}"
      url_username: "{{ jenkins_admin_username }}"
      url_password: "{{ jenkins_admin_password }}"
  with_items: "{{ jenkins_plugins }}"
  when: jenkins_admin_password != ""
  notify: safe restart jenkins

- name: Jenkins | Force handlers
  meta: flush_handlers

- name: Jenkins | Wait for Jenkins to fully startup before continue
  uri:
    url: "{{ jenkins_url }}"
    status_code: 200
  retries: "{{ jenkins_check_restart_num_retries }}"
  delay: "{{ jenkins_check_restart_delay }}"
  register: result
  until: result.status == 200
  changed_when: false

- name: Jenkins | Configure csrf
  jenkins_script:
    script: "{{ lookup('template', 'CSRFConfiguration.groovy.j2') }}"
    user: "{{ jenkins_admin_username }}"
    password: "{{ jenkins_admin_password }}"
    url: "{{ jenkins_url }}"

- name: Jenkins | Execute installation scripts (1/2)
  jenkins_script:
    script: "{{ lookup('file', item) }}"
    user: "{{ jenkins_admin_username }}"
    password: "{{ jenkins_admin_password }}"
    url: "{{ jenkins_url }}"
  with_fileglob:
    - "{{ jenkins_script_files_path }}/*"

- name: Jenkins | Execute installation scripts (2/2)
  jenkins_script:
    script: "{{ lookup('template', item) }}"
    user: "{{ jenkins_admin_username }}"
    password: "{{ jenkins_admin_password }}"
    url: "{{ jenkins_url }}"
  with_fileglob:
    - "{{ jenkins_script_templates_path }}/*"

- name: Jenkins | Execute configuration scripts
  jenkins_script:
    script: "{{ lookup('file', item) }}"
    user: "{{ jenkins_admin_username }}"
    password: "{{ jenkins_admin_password }}"
    url: "{{ jenkins_url }}"
    args: "{{ configuration_script_variables[item | basename | splitext | first] }}"
  with_fileglob:
    - "{{ jenkins_configuration_script_files_path }}/*"
